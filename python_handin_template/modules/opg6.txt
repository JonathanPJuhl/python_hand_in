Handin Exercise 6
Create a module containing a class: TextComparer with the following methods:

__init__(self, url_list)
download(url,filename) that stores the file on disk and raises NotFoundException when url returns 404
multi_download() uses threads to download multiple urls as text and stores filenames on a property of the TextComparer class object (Hint: use the download() method and create the filenames from the url or from the response object)
__iter__() returns an iterator
__next__() returns the next filename (and stops when there are no more)
urllist_generator() returns a generator to loop through the urls
avg_vowels(text) - a rough estimate on readability returns average number of vowels in the words of the text
hardest_read() reads all text from files in filenames and returns the filename of the text with the highest vowel score (use all the cpu cores on the computer for this work.
Ex 2
Create a notebook and import your module from above

Find 10 books on https://www.gutenberg.org/browse/scores/top and download them using an object of the class you just created before
Test the different methods of your class
Make a bar plot with a sorted list of books on x-axis and avg vowels on y-axis